For version 24 of the application, a separate postgres container was created.
It was set up manually without any scripts, but we will have to automate that.
we also had the migrations done and gunicorn was taken out in the dockerfile.
maybe look into replacing it back in.

to do:
be able to have a volumes so data is persistent.
make sure this is able to run on production server.
have a script/entrypoint for the container


problems:
had to run the postgres container with initialization script first,
then run a bunch of commands for the web container to migrate the database.
also in v24 we are still using flask to serve the app so nginx is not being used.

docker-compose run web python manage.py db init
docker-compose run web python manage.py db migrate
docker-compose run web python manage.py db upgrade

those commands are needed in order to migrate the database

###
version 30
###

Before running this, migrations must be run.
Nginx/Postgres and web now run perfectly on local on 0.0.0.0:8000 in nginx.conf.

Before web:8000 was not working i think. one issue is the lack of persistent volumes, when u docker-compose down and then up again,
the application ceases to work.